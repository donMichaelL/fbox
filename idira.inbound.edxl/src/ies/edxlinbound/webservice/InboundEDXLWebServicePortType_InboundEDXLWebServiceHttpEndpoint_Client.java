
package ies.edxlinbound.webservice;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.5
 * 2013-05-23T16:34:59.768+03:00
 * Generated source version: 2.7.5
 * 
 */
public final class InboundEDXLWebServicePortType_InboundEDXLWebServiceHttpEndpoint_Client {

    private static final QName SERVICE_NAME = new QName("http://webservice.edxlinbound.ies", "Inbound_EDXL_WebService");

    private InboundEDXLWebServicePortType_InboundEDXLWebServiceHttpEndpoint_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = InboundEDXLWebService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        InboundEDXLWebService ss = new InboundEDXLWebService(wsdlURL, SERVICE_NAME);
        InboundEDXLWebServicePortType port = ss.getInboundEDXLWebServiceHttpEndpoint();  
        
        {
        System.out.println("Invoking checkStatus...");
        java.lang.Boolean _checkStatus__return = port.checkStatus();
        System.out.println("checkStatus.result=" + _checkStatus__return);


        }
        {
        System.out.println("Invoking receiveEDXL...");
        java.lang.String _receiveEDXL_edxl = "";
        try {
            java.lang.Boolean _receiveEDXL__return = port.receiveEDXL(_receiveEDXL_edxl);
            System.out.println("receiveEDXL.result=" + _receiveEDXL__return);

        } catch (InboundEDXLWebServiceException_Exception e) { 
            System.out.println("Expected exception: Inbound_EDXL_WebServiceException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking isValidRM...");
        java.lang.String _isValidRM_rm = "";
        java.lang.Boolean _isValidRM__return = port.isValidRM(_isValidRM_rm);
        System.out.println("isValidRM.result=" + _isValidRM__return);


        }
        {
        System.out.println("Invoking receiveCAP...");
        java.lang.String _receiveCAP_caPmessage = "";
        try {
            java.lang.Boolean _receiveCAP__return = port.receiveCAP(_receiveCAP_caPmessage);
            System.out.println("receiveCAP.result=" + _receiveCAP__return);

        } catch (InboundEDXLWebServiceException_Exception e) { 
            System.out.println("Expected exception: Inbound_EDXL_WebServiceException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking isValidCAP...");
        java.lang.String _isValidCAP_cap = "";
        java.lang.Boolean _isValidCAP__return = port.isValidCAP(_isValidCAP_cap);
        System.out.println("isValidCAP.result=" + _isValidCAP__return);


        }
        {
        System.out.println("Invoking validateCAP...");
        java.lang.String _validateCAP_cap = "";
        java.lang.String _validateCAP__return = port.validateCAP(_validateCAP_cap);
        System.out.println("validateCAP.result=" + _validateCAP__return);


        }
        {
        System.out.println("Invoking validateRM...");
        java.lang.String _validateRM_rm = "";
        java.lang.String _validateRM__return = port.validateRM(_validateRM_rm);
        System.out.println("validateRM.result=" + _validateRM__return);


        }

        System.exit(0);
    }

}
